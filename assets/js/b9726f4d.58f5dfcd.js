"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3819],{1310:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/medias/audio-b843a85179165964cec35c8c02fea66d.wav"},4944:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>n,toc:()=>u});var n=a(8733),i=a(4848),r=a(8453),o=a(5209);const l={title:"Getting Started with Ray on Google Cloud Platform",slug:"getting-started-with-ray-on-google-cloud-platform",description:"As AI and machine learning workloads continue to grow in scale and complexity, the need for flexible and efficient distributed computing frameworks becomes increasingly important. Ray is an open-source framework built to simplify the development and execution of distributed applications using familiar Python syntax. This post introduces how to get started with Ray on Google Cloud Platform, covering the fundamentals of Ray\u2019s distributed architecture, core components, and scaling strategies. You\u2019ll learn how to deploy and manage Ray clusters on Vertex AI, configure autoscaling, and run distributed Python and machine learning workloads with practical code examples.",authors:["haruiz"],tags:["ray","google-cloud","vertex-ai","distributed-computing","machine-learning","scalable-ai","python","cloud-computing","kubernetes","data-science","mlops","ray-datasets","parallel-computing"]},s=void 0,c={authorsImageUrls:[void 0]},u=[];function d(e){return(0,i.jsx)(o.A,{audioSrc:a(1310).A})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d()}},5209:(e,t,a)=>{a.d(t,{A:()=>x});var n=a(6540);const i="audioPlayer_bD77",r="controlButton_18Mu",o="playPauseButton_BOck",l="timeDisplay__nfh",s="progressBar_GLd5",c="volumeControl_jpxX",u="volumeSlider_ecko",d="speedControl_V7oK",m="speedSelect_tSpO",g="loadingContainer_ejfH",p="loadingText_ca0W",h="spinner_NOhs";var b=a(5604),f=a(4848);const y=e=>{if(isNaN(e)||e===1/0)return"00:00";const t=Math.floor(e/60),a=Math.floor(e%60);return`${String(t).padStart(2,"0")}:${String(a).padStart(2,"0")}`},x=e=>{let{audioSrc:t,title:a="Audio Version"}=e;const[x,v]=(0,n.useState)(!1),[k,w]=(0,n.useState)(0),[j,A]=(0,n.useState)(0),[R,S]=(0,n.useState)(1),[N,P]=(0,n.useState)(!1),[C,T]=(0,n.useState)(1),[_,G]=(0,n.useState)(!1),F=(0,n.useRef)(null),I=(0,n.useRef)(null),L=(0,n.useRef)(null);(0,n.useEffect)((()=>{const e=F.current;if(!e)return;const t=()=>{w(e.duration),A(e.currentTime),G(!0)},a=()=>A(e.currentTime),n=()=>{v(!1),A(e.duration),cancelAnimationFrame(L.current)};return v(!1),A(0),w(0),G(!1),L.current&&cancelAnimationFrame(L.current),e.addEventListener("loadedmetadata",t),e.addEventListener("timeupdate",a),e.addEventListener("ended",n),()=>{e.removeEventListener("loadedmetadata",t),e.removeEventListener("timeupdate",a),e.removeEventListener("ended",n),L.current&&cancelAnimationFrame(L.current)}}),[t]);const E=(0,n.useCallback)((()=>{if(F.current&&I.current){const e=F.current,t=I.current,a=e.currentTime;A(a),t.value=a,t.style.setProperty("--seek-before-width",a/k*100+"%"),L.current=requestAnimationFrame(E)}}),[k]);(0,n.useEffect)((()=>(x?(F.current.play(),L.current=requestAnimationFrame(E)):(F.current.pause(),cancelAnimationFrame(L.current)),()=>cancelAnimationFrame(L.current))),[x,E]);return(0,f.jsxs)("div",{className:i,children:[(0,f.jsx)("audio",{ref:F,src:t,preload:"metadata"}),_?(0,f.jsxs)(f.Fragment,{children:[(0,f.jsx)("button",{onClick:()=>{_&&v((e=>!e))},className:`${r} ${o}`,"aria-label":x?"Pause":"Play",children:x?(0,f.jsx)(b.kwt,{}):(0,f.jsx)(b.gSK,{})}),(0,f.jsx)("span",{className:l,children:y(j)}),(0,f.jsx)("input",{ref:I,type:"range",className:s,value:j,max:k||0,onChange:e=>{if(!_)return;const t=Number(e.target.value);F.current.currentTime=t,A(t),I.current.style.setProperty("--seek-before-width",t/k*100+"%")},"aria-label":"Seek progress",style:{"--seek-before-width":j/k*100+"%"}}),(0,f.jsx)("span",{className:l,children:y(k)}),(0,f.jsxs)("div",{className:c,children:[(0,f.jsx)("button",{onClick:()=>{const e=F.current;if(N){const t=R>0?R:.5;S(t),e.volume=t,P(!1)}else e.volume=0,P(!0),S(0)},className:r,"aria-label":N?"Unmute":"Mute",children:N?(0,f.jsx)(b.FZ2,{}):(0,f.jsx)(b.pPd,{})}),(0,f.jsx)("input",{type:"range",min:"0",max:"1",step:"0.01",value:N?0:R,onChange:e=>{const t=Number(e.target.value);S(t),F.current.volume=t,P(0===t)},className:u,style:{"--volume-before-width":(N?0:100*R)+"%"}})]}),(0,f.jsx)("div",{className:d,children:(0,f.jsxs)("select",{value:C,onChange:e=>{const t=Number(e.target.value);T(t),F.current.playbackRate=t},className:m,"aria-label":"Playback speed",children:[(0,f.jsx)("option",{value:"0.5",children:"0.5x"}),(0,f.jsx)("option",{value:"0.75",children:"0.75x"}),(0,f.jsx)("option",{value:"1",children:"1x"}),(0,f.jsx)("option",{value:"1.25",children:"1.25x"}),(0,f.jsx)("option",{value:"1.5",children:"1.5x"}),(0,f.jsx)("option",{value:"2",children:"2x"})]})})]}):(0,f.jsxs)("div",{className:g,children:[(0,f.jsx)("span",{className:p,children:"Loading audio..."}),(0,f.jsx)("div",{className:h})]})]})}},8733:e=>{e.exports=JSON.parse('{"permalink":"/blog/getting-started-with-ray-on-google-cloud-platform","source":"@site/blog/2025-04-01-getting-started-with-ray-on-google-cloud-platform/index.md","title":"Getting Started with Ray on Google Cloud Platform","description":"As AI and machine learning workloads continue to grow in scale and complexity, the need for flexible and efficient distributed computing frameworks becomes increasingly important. Ray is an open-source framework built to simplify the development and execution of distributed applications using familiar Python syntax. This post introduces how to get started with Ray on Google Cloud Platform, covering the fundamentals of Ray\u2019s distributed architecture, core components, and scaling strategies. You\u2019ll learn how to deploy and manage Ray clusters on Vertex AI, configure autoscaling, and run distributed Python and machine learning workloads with practical code examples.","date":"2025-04-01T00:00:00.000Z","tags":[{"inline":true,"label":"ray","permalink":"/blog/tags/ray"},{"inline":true,"label":"google-cloud","permalink":"/blog/tags/google-cloud"},{"inline":true,"label":"vertex-ai","permalink":"/blog/tags/vertex-ai"},{"inline":true,"label":"distributed-computing","permalink":"/blog/tags/distributed-computing"},{"inline":true,"label":"machine-learning","permalink":"/blog/tags/machine-learning"},{"inline":true,"label":"scalable-ai","permalink":"/blog/tags/scalable-ai"},{"inline":true,"label":"python","permalink":"/blog/tags/python"},{"inline":true,"label":"cloud-computing","permalink":"/blog/tags/cloud-computing"},{"inline":true,"label":"kubernetes","permalink":"/blog/tags/kubernetes"},{"inline":true,"label":"data-science","permalink":"/blog/tags/data-science"},{"inline":true,"label":"mlops","permalink":"/blog/tags/mlops"},{"inline":true,"label":"ray-datasets","permalink":"/blog/tags/ray-datasets"},{"inline":true,"label":"parallel-computing","permalink":"/blog/tags/parallel-computing"}],"readingTime":19.275,"hasTruncateMarker":true,"authors":[{"name":"Henry Ruiz","title":"Blog Author","url":"https://github.com/haruiz","imageURL":"https://github.com/haruiz.png","key":"haruiz","page":null}],"frontMatter":{"title":"Getting Started with Ray on Google Cloud Platform","slug":"getting-started-with-ray-on-google-cloud-platform","description":"As AI and machine learning workloads continue to grow in scale and complexity, the need for flexible and efficient distributed computing frameworks becomes increasingly important. Ray is an open-source framework built to simplify the development and execution of distributed applications using familiar Python syntax. This post introduces how to get started with Ray on Google Cloud Platform, covering the fundamentals of Ray\u2019s distributed architecture, core components, and scaling strategies. You\u2019ll learn how to deploy and manage Ray clusters on Vertex AI, configure autoscaling, and run distributed Python and machine learning workloads with practical code examples.","authors":["haruiz"],"tags":["ray","google-cloud","vertex-ai","distributed-computing","machine-learning","scalable-ai","python","cloud-computing","kubernetes","data-science","mlops","ray-datasets","parallel-computing"]},"unlisted":false,"nextItem":{"title":"Building Trustworthy RAG Systems with In Text Citations","permalink":"/blog/improve-rag-systems-reliability-with-citations"}}')}}]);