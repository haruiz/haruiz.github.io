"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[469],{7843:(a,t,e)=>{e.r(t),e.d(t,{assets:()=>g,contentTitle:()=>s,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var o=e(7462),r=(e(7294),e(3905));const n={slug:"package-manager-tools-for-python",title:"Package manager tools for Python",authors:["haruiz"],tags:["python","package manager","tools"]},s=void 0,i={permalink:"/blog/package-manager-tools-for-python",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-07-29T18:34:13.162Z-Package-manager-tools-for-Python.md",source:"@site/blog/2022-07-29T18:34:13.162Z-Package-manager-tools-for-Python.md",title:"Package manager tools for Python",description:"A package manager is a software tool that automates the process of installing, upgrading, configuring, and removing computer programs/libraries from our machines. For python specifically, we have different alternatives, such as conda, virtualenv, pip, etc.  The video below provides us more information about these kind of tools, and highlight the aspects that we should consider when choosing the most appropriate:",date:"2022-07-29T00:00:00.000Z",formattedDate:"July 29, 2022",tags:[{label:"python",permalink:"/blog/tags/python"},{label:"package manager",permalink:"/blog/tags/package-manager"},{label:"tools",permalink:"/blog/tags/tools"}],readingTime:2.14,hasTruncateMarker:!0,authors:[{name:"Henry Ruiz",title:"Blog Author",url:"https://github.com/haruiz",imageURL:"https://github.com/haruiz.png",key:"haruiz"}],frontMatter:{slug:"package-manager-tools-for-python",title:"Package manager tools for Python",authors:["haruiz"],tags:["python","package manager","tools"]}},g={authorsImageUrls:[void 0]},l=[],p={toc:l};function c(a){let{components:t,...e}=a;return(0,r.kt)("wrapper",(0,o.Z)({},p,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A package manager is a software tool that automates the process of installing, upgrading, configuring, and removing computer programs/libraries from our machines. For python specifically, we have different alternatives, such as conda, virtualenv, pip, etc."))}c.isMDXComponent=!0}}]);